// Generated using webpack-cli https://github.com/webpack/webpack-cli
var path = require('path');

var HtmlWebpackPlugin = require('html-webpack-plugin');

var isProduction = process.env.NODE_ENV == 'production';
var stylesHandler = 'style-loader';
var SRC_DIR = path.join(__dirname, '/src');
var config = {
  entry: "".concat(SRC_DIR, "/index.jsx"),
  output: {
    filename: 'main.js',
    path: path.join(__dirname, '/dist')
  },
  devServer: {
    open: true,
    host: 'localhost'
  },
  plugins: [new HtmlWebpackPlugin({
    template: 'index.html'
  }) // Add your plugins here
  // Learn more about plugins from https://webpack.js.org/configuration/plugins/
  ],
  module: {
    rules: [{
      test: /\.(js|jsx)$/i,
      loader: 'babel-loader'
    }, {
      test: /\.css$/i,
      use: [stylesHandler, 'css-loader']
    }, {
      test: /\.(eot|svg|ttf|woff|woff2|png|jpg|gif)$/i,
      type: 'asset'
    }, // Add your rules for custom modules here
    // Learn more about loaders from https://webpack.js.org/loaders/
    {
      test: /\.m?js$/,
      exclude: /(node_modules|bower_components)/,
      use: {
        loader: 'babel-loader',
        options: {
          presets: ['@babel/preset-env']
        }
      }
    }]
  }
};

module.exports = function () {
  if (isProduction) {
    config.mode = 'production';
  } else {
    config.mode = 'development';
  }

  return config;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsIkh0bWxXZWJwYWNrUGx1Z2luIiwiaXNQcm9kdWN0aW9uIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwic3R5bGVzSGFuZGxlciIsIlNSQ19ESVIiLCJqb2luIiwiX19kaXJuYW1lIiwiY29uZmlnIiwiZW50cnkiLCJvdXRwdXQiLCJmaWxlbmFtZSIsImRldlNlcnZlciIsIm9wZW4iLCJob3N0IiwicGx1Z2lucyIsInRlbXBsYXRlIiwibW9kdWxlIiwicnVsZXMiLCJ0ZXN0IiwibG9hZGVyIiwidXNlIiwidHlwZSIsImV4Y2x1ZGUiLCJvcHRpb25zIiwicHJlc2V0cyIsImV4cG9ydHMiLCJtb2RlIl0sInNvdXJjZXMiOlsiLi4vd2VicGFjay5jb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIHVzaW5nIHdlYnBhY2stY2xpIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrL3dlYnBhY2stY2xpXG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBIdG1sV2VicGFja1BsdWdpbiA9IHJlcXVpcmUoJ2h0bWwtd2VicGFjay1wbHVnaW4nKTtcblxuY29uc3QgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT0gJ3Byb2R1Y3Rpb24nO1xuXG5cbmNvbnN0IHN0eWxlc0hhbmRsZXIgPSAnc3R5bGUtbG9hZGVyJztcblxuXG52YXIgU1JDX0RJUiA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcvc3JjJyk7XG5jb25zdCBjb25maWcgPSB7XG4gICAgZW50cnk6IGAke1NSQ19ESVJ9L2luZGV4LmpzeGAsXG4gICAgb3V0cHV0OiB7XG4gICAgICAgIGZpbGVuYW1lOiAnbWFpbi5qcycsXG4gICAgICAgIHBhdGg6IHBhdGguam9pbihfX2Rpcm5hbWUsICcvZGlzdCcpLFxuXG4gICAgfSxcbiAgICBkZXZTZXJ2ZXI6IHtcbiAgICAgICAgb3BlbjogdHJ1ZSxcbiAgICAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgfSxcbiAgICBwbHVnaW5zOiBbXG4gICAgICAgIG5ldyBIdG1sV2VicGFja1BsdWdpbih7XG4gICAgICAgICAgICB0ZW1wbGF0ZTogJ2luZGV4Lmh0bWwnLFxuICAgICAgICB9KSxcblxuICAgICAgICAvLyBBZGQgeW91ciBwbHVnaW5zIGhlcmVcbiAgICAgICAgLy8gTGVhcm4gbW9yZSBhYm91dCBwbHVnaW5zIGZyb20gaHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25maWd1cmF0aW9uL3BsdWdpbnMvXG4gICAgXSxcbiAgICBtb2R1bGU6IHtcbiAgICAgICAgcnVsZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0ZXN0OiAvXFwuKGpzfGpzeCkkL2ksXG4gICAgICAgICAgICAgICAgbG9hZGVyOiAnYmFiZWwtbG9hZGVyJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGVzdDogL1xcLmNzcyQvaSxcbiAgICAgICAgICAgICAgICB1c2U6IFtzdHlsZXNIYW5kbGVyLCdjc3MtbG9hZGVyJ10sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRlc3Q6IC9cXC4oZW90fHN2Z3x0dGZ8d29mZnx3b2ZmMnxwbmd8anBnfGdpZikkL2ksXG4gICAgICAgICAgICAgICAgdHlwZTogJ2Fzc2V0JyxcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIC8vIEFkZCB5b3VyIHJ1bGVzIGZvciBjdXN0b20gbW9kdWxlcyBoZXJlXG4gICAgICAgICAgICAvLyBMZWFybiBtb3JlIGFib3V0IGxvYWRlcnMgZnJvbSBodHRwczovL3dlYnBhY2suanMub3JnL2xvYWRlcnMvXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdGVzdDogL1xcLm0/anMkLyxcbiAgICAgICAgICAgICAgICBleGNsdWRlOiAvKG5vZGVfbW9kdWxlc3xib3dlcl9jb21wb25lbnRzKS8sXG4gICAgICAgICAgICAgICAgdXNlOiB7XG4gICAgICAgICAgICAgICAgICBsb2FkZXI6ICdiYWJlbC1sb2FkZXInLFxuICAgICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICBwcmVzZXRzOiBbJ0BiYWJlbC9wcmVzZXQtZW52J11cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKCkgPT4ge1xuICAgIGlmIChpc1Byb2R1Y3Rpb24pIHtcbiAgICAgICAgY29uZmlnLm1vZGUgPSAncHJvZHVjdGlvbic7XG5cblxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbmZpZy5tb2RlID0gJ2RldmVsb3BtZW50JztcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZztcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNQyxpQkFBaUIsR0FBR0QsT0FBTyxDQUFDLHFCQUFELENBQWpDOztBQUVBLElBQU1FLFlBQVksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosSUFBd0IsWUFBN0M7QUFHQSxJQUFNQyxhQUFhLEdBQUcsY0FBdEI7QUFHQSxJQUFJQyxPQUFPLEdBQUdSLElBQUksQ0FBQ1MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE1BQXJCLENBQWQ7QUFDQSxJQUFNQyxNQUFNLEdBQUc7RUFDWEMsS0FBSyxZQUFLSixPQUFMLGVBRE07RUFFWEssTUFBTSxFQUFFO0lBQ0pDLFFBQVEsRUFBRSxTQUROO0lBRUpkLElBQUksRUFBRUEsSUFBSSxDQUFDUyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckI7RUFGRixDQUZHO0VBT1hLLFNBQVMsRUFBRTtJQUNQQyxJQUFJLEVBQUUsSUFEQztJQUVQQyxJQUFJLEVBQUU7RUFGQyxDQVBBO0VBV1hDLE9BQU8sRUFBRSxDQUNMLElBQUloQixpQkFBSixDQUFzQjtJQUNsQmlCLFFBQVEsRUFBRTtFQURRLENBQXRCLENBREssQ0FLTDtFQUNBO0VBTkssQ0FYRTtFQW1CWEMsTUFBTSxFQUFFO0lBQ0pDLEtBQUssRUFBRSxDQUNIO01BQ0lDLElBQUksRUFBRSxjQURWO01BRUlDLE1BQU0sRUFBRTtJQUZaLENBREcsRUFLSDtNQUNJRCxJQUFJLEVBQUUsU0FEVjtNQUVJRSxHQUFHLEVBQUUsQ0FBQ2pCLGFBQUQsRUFBZSxZQUFmO0lBRlQsQ0FMRyxFQVNIO01BQ0llLElBQUksRUFBRSwwQ0FEVjtNQUVJRyxJQUFJLEVBQUU7SUFGVixDQVRHLEVBY0g7SUFDQTtJQUNBO01BQ0lILElBQUksRUFBRSxTQURWO01BRUlJLE9BQU8sRUFBRSxpQ0FGYjtNQUdJRixHQUFHLEVBQUU7UUFDSEQsTUFBTSxFQUFFLGNBREw7UUFFSEksT0FBTyxFQUFFO1VBQ1BDLE9BQU8sRUFBRSxDQUFDLG1CQUFEO1FBREY7TUFGTjtJQUhULENBaEJHO0VBREg7QUFuQkcsQ0FBZjs7QUFrREFSLE1BQU0sQ0FBQ1MsT0FBUCxHQUFpQixZQUFNO0VBQ25CLElBQUkxQixZQUFKLEVBQWtCO0lBQ2RRLE1BQU0sQ0FBQ21CLElBQVAsR0FBYyxZQUFkO0VBR0gsQ0FKRCxNQUlPO0lBQ0huQixNQUFNLENBQUNtQixJQUFQLEdBQWMsYUFBZDtFQUNIOztFQUNELE9BQU9uQixNQUFQO0FBQ0gsQ0FURCJ9